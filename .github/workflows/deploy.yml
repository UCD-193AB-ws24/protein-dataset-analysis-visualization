name: Full Stack Deployment

on:
  push:
    branches:
      - main
      - git-actions-frontend

  workflow_dispatch:
    inputs:
      run_backend:
        description: 'Run backend deploy?'
        required: false
        default: 'true'
      run_frontend:
        description: 'Run frontend deploy?'
        required: false
        default: 'true'

jobs:
  deploy-backend:
    if: github.event_name == 'push' || github.event.inputs.run_backend == 'true'

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Part2/Part2_Backend

    outputs:
      zappa-url: ${{ steps.get-url.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Part2/Part2_Backend/requirements.txt') }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Inject environment variables into zappa_settings.json
        run: |
          jq --arg env "${{ vars.ENV }}" \
             --arg s3_key "${{ secrets.S3_AWS_ACCESS_KEY_ID }}" \
             --arg s3_secret "${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}" \
             --arg aws_region "${{ secrets.AWS_DEFAULT_REGION }}" \
             --arg db_url "${{ secrets.DATABASE_URL }}" \
             --arg s3_bucket "${{ secrets.S3_BUCKET_NAME }}" \
             '.dev.environment_variables.ENV = $env |
              .dev.environment_variables.S3_AWS_ACCESS_KEY_ID = $s3_key |
              .dev.environment_variables.S3_AWS_SECRET_ACCESS_KEY = $s3_secret |
              .dev.environment_variables.S3_AWS_REGION = $aws_region |
              .dev.environment_variables.DATABASE_URL = $db_url |
              .dev.environment_variables.S3_BUCKET_NAME = $s3_bucket' \
             zappa_settings.json > tmp && mv tmp zappa_settings.json

      - name: Create virtualenv, install packages, and deploy with Zappa
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade zappa
          if zappa status -s zappa_settings.json dev >/dev/null 2>&1; then
            zappa update -s zappa_settings.json dev
          else
            zappa deploy -s zappa_settings.json dev
          fi

      - name: Get Zappa URL
        id: get-url
        run: |
          echo "url=$(zappa status -s zappa_settings.json dev | grep -o 'https://[^ ]*')" >> $GITHUB_OUTPUT

  deploy-frontend:
    if: github.event_name == 'push' || github.event.inputs.run_frontend == 'true'

    runs-on: ubuntu-latest
    needs: deploy-backend

    defaults:
      run:
        working-directory: Part2/Part2_Frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # TODO: Check which node version to use
      - name: Setup Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Build SvelteKit app with backend URL
        run: |
          VITE_API_URL="${{ needs.deploy-backend.outputs.zappa-url }}" npm run build

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.FRONTEND_S3_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          SOURCE_DIR: build

