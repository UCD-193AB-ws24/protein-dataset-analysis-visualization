name: Deploy Zappa on main

on:
  push:
    branches: [main]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Part2/Part2_Backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Part2/Part2_Backend/requirements.txt') }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Inject environment variables into zappa_settings.json
        run: |
          jq --arg url    "${{ secrets.SUPABASE_URL }}" \
             --arg key    "${{ secrets.SUPABASE_KEY }}" \
             --arg cloud  "${{ secrets.CLOUD_NAME }}"   \
             --arg api    "${{ secrets.API_KEY }}"      \
             --arg secret "${{ secrets.API_SECRET }}"   \
             '.dev.environment_variables.SUPABASE_URL = $url |
              .dev.environment_variables.SUPABASE_KEY = $key |
              .dev.environment_variables.CLOUD_NAME   = $cloud |
              .dev.environment_variables.API_KEY      = $api |
              .dev.environment_variables.API_SECRET   = $secret' \
             zappa_settings.json > tmp && mv tmp zappa_settings.json

      - name: Create virtualenv, install packages, and deploy with Zappa
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade zappa
          if zappa status -s zappa_settings.json dev >/dev/null 2>&1; then
            zappa update -s zappa_settings.json dev
          else
            zappa deploy -s zappa_settings.json dev
          fi